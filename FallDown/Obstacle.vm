function Obstacle.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push argument 1
pop this 2
push constant 255
pop this 3
push constant 0
pop this 0
push pointer 0
return
function Obstacle.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Obstacle.setNext 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function Obstacle.getNext 0
push argument 0
pop pointer 0
push this 0
return
function Obstacle.draw 2
push argument 0
pop pointer 0
push this 3
pop local 0
push pointer 0
call Obstacle.getY2 1
pop local 1
push local 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 0
label IF_FALSE1
push local 1
push constant 255
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 255
pop local 1
label IF_FALSE2
push argument 1
call Screen.setColor 1
pop temp 0
push this 1
push local 0
push this 2
push local 1
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Obstacle.moveUp 0
push argument 0
pop pointer 0
push this 3
push constant 5
sub
pop this 3
push constant 0
return
function Obstacle.getX1 0
push argument 0
pop pointer 0
push this 1
return
function Obstacle.getX2 0
push argument 0
pop pointer 0
push this 2
return
function Obstacle.getY1 0
push argument 0
pop pointer 0
push this 3
return
function Obstacle.getY2 0
push argument 0
pop pointer 0
push this 3
push constant 10
add
return
