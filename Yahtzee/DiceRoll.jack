/** Displays the Dice Roll Screen */
class DiceRoll
{
	/* var declarations */
	static Background bg;
	static HomeScreen home;
	static DiceRoll diceRoll;
	static String name1, name2, rerollDice;
	static boolean isP1Turn;
	field int rollNum, continue;
	static Array p1Score, p2Score, diceRoll;
	
	/** Construct a new StartScreen to be displayed */
	constructor DiceRoll new(String player1, String player2)
	{		
		let name1 = player1;
		let name2 = player2;
		let isP1Turn = true;
		let continue = 0;
		let rollNum = 0;
		
		let p1Score = Array.new(16);
		let p2Score = Array.new(16);
		let diceRoll = Array.new(5);
		
		do DiceRoll.initializeArraysToZero();
	
		/* play game! */
		while(continue < 16)
		{
			let bg = Background.new(0);
			
			let diceRoll[0] = 0;
			let diceRoll[1] = 0;
			let diceRoll[2] = 0;
			let diceRoll[3] = 0;
			let diceRoll[4] = 0;
			
			do Output.moveCursor(0, 0);
			do Output.printString("Press any key to continue, ");
			if(isP1Turn)
			{
				do Output.printString(name1);
			}
			else
			{
				do Output.printString(name2);
			}
			
			do DiceRoll.rollDice(5);
			do DiceRoll.displayDice();
			
			if(isP1Turn)
			{
				do DiceRoll.displayScoreBoard(p1Score);
			}
			else
			{
				do DiceRoll.displayScoreBoard(p2Score);
			}
			
			while(rollNum < 2)
			{									
				let rerollDice = 0;
		
				do Output.moveCursor(22, 0);
				let rerollDice = Keyboard.readLine("Select the dice (1-5) you'd like to re-roll:");
				do DiceRoll.rollDice(rerollDice.length());
				do DiceRoll.displayDice();
				if(isP1Turn)
				{
					do DiceRoll.displayScoreBoard(p1Score);
				}
				else
				{
					do DiceRoll.displayScoreBoard(p2Score);
				}
				
				let rollNum = rollNum + 1;
			}
			
			if(isP1Turn)
			{
				do DiceRoll.recordScore(p1Score);
			}
			else
			{
				do DiceRoll.recordScore(p2Score);
			}
			
			let isP1Turn = ~isP1Turn;
			let rollNum = 0;
			
			let continue = continue + 1;
		}
		
		//do DiceRoll.totalScores();
		
		return this;
	}
	
	function void displayDice()
	{
		var int count, dieNum, key;
		let count = 0;
		let bg = Background.new(0);
		
		do Output.moveCursor(0, 49);
		do Output.backSpace();
		do Output.backSpace();
		do Output.backSpace();
		do Output.backSpace();
		do Output.backSpace();
		do Output.backSpace();
		do Output.backSpace();
		do Output.backSpace();
		do Output.backSpace();

		while(count < 5)
		{
			do Output.printInt(diceRoll[count]);
			do Output.printString(" ");
			let count = count + 1;
		}
		
		return;
	}
	
	function void displayScoreBoard(Array scoreBoard)
	{
		do Output.moveCursor(0, 0);
		do Output.printString("Upper Section");
		do Output.println();
		do Output.printString("1. Aces: ");
		do Output.printInt(scoreBoard[0]);
		do Output.println();
		do Output.printString("2. Twos: ");
		do Output.printInt(scoreBoard[1]);
		do Output.println();
		do Output.printString("3. Threes: ");
		do Output.printInt(scoreBoard[2]);
		do Output.println();
		do Output.printString("4. Fours: ");
		do Output.printInt(scoreBoard[3]);
		do Output.println();
		do Output.printString("5. Fives: ");
		do Output.printInt(scoreBoard[4]);
		do Output.println();
		do Output.printString("6. Sixes: ");
		do Output.printInt(scoreBoard[5]);
		do Output.println();
		do Output.println();
		
		do Output.printString("Lower Section");
		do Output.println();
		do Output.printString("7. 3 of a kind: ");
		do Output.printInt(scoreBoard[7]);
		do Output.println();
		do Output.printString("8. 4 of a kind: ");
		do Output.printInt(scoreBoard[8]);
		do Output.println();
		do Output.printString("9. Full House (score = 25): ");
		do Output.printInt(scoreBoard[9]);
		do Output.println();
		do Output.printString("10. Sm Straight (score = 30): ");
		do Output.printInt(scoreBoard[10]);
		do Output.println();
		do Output.printString("11. Lg Straight (score = 40): ");
		do Output.printInt(scoreBoard[11]);
		do Output.println();
		do Output.printString("12. YEETZAH (score = 50): ");
		do Output.printInt(scoreBoard[12]);
		do Output.println();
		do Output.printString("13. Chance: ");
		do Output.printInt(scoreBoard[13]);
		
		return;
	}
	
	function void initializeArraysToZero()
	{
		var int count;
		
		let count = 0;
		while(count < 15)
		{
			let p1Score[count] = 0;
			let p2Score[count] = 0;
			
			let count = count + 1;
		}
		
		return;
	}
	
	function void rollDice(int diceToRoll)
	{
		var int count, dieNum, key;
		var char whichDice;
		var String dice;
		var RAND die;
		let count = 0;
		let dieNum = 0;
		let key = 0;
		
		while(key = 0)
		{
			let key = Keyboard.keyPressed();
		}
	
		let die = RAND.new(key);
	
		if(diceToRoll > 4)
		{
			while(count < 5)
			{
				let dieNum = die.intBetween(1, 6);
				let diceRoll[count] = dieNum;				
				let count = count + 1;
			}
		}
		else
		{
			while(count < diceToRoll)
			{
				let whichDice = rerollDice.charAt(count);
				
				if(whichDice = 48)
				{
					return;
				}
				
				let dice = whichDice - 49;
				let dieNum = die.intBetween(1, 6);
				let diceRoll[dice] = dieNum;
				let count = count + 1;
			}
		}
		
		return;
	}	
	
	function void recordScore(Array scoreBoard)
	{
		var int score, total, numInts, count;
		let score = 0;
		let total = 0;
		let count = 0;
		let numInts = 0;
		do Output.moveCursor(22, 0);
		let score = Keyboard.readInt("Where would you like to place your score?: ");
		
		if(score = 6 | score = 15 | score = 16)
		{
			do Output.moveCursor(22, 0);
			let score = Keyboard.readInt("Where would you like to place your score?: ");
		}
		if(score = 1)
		{
			let score = score - 1;
			while(count < 5)
			{
				if(diceRoll[count] = 1)
				{
					let numInts = numInts + 1;
				}
				let count = count + 1;
			}
			
			let total = 1 * numInts;
		}
		if(score = 2)
		{
			let score = score - 1;
			while(count < 5)
			{
				if(diceRoll[count] = 2)
				{
					let numInts = numInts + 1;
				}
				let count = count + 1;
			}		
			
			let total = 2 * numInts;
		}
		if(score = 3)
		{
			let score = score - 1;
			while(count < 5)
			{
				if(diceRoll[count] = 3)
				{
					let numInts = numInts + 1;
				}
				let count = count + 1;
			}		
			
			let total = 3 * numInts;
		}
		if(score = 4)
		{
			let score = score - 1;
			while(count < 5)
			{
				if(diceRoll[count] = 4)
				{
					let numInts = numInts + 1;
				}
				let count = count + 1;
			}		
			
			let total = 4 * numInts;
		}
		if(score = 5)
		{
			let score = score - 1;
			while(count < 5)
			{
				if(diceRoll[count] = 5)
				{
					let numInts = numInts + 1;
				}
				let count = count + 1;
			}		
			
			let total = 5 * numInts;
		}
		if(score = 6)
		{
			let score = score - 1;
			while(count < 5)
			{
				if(diceRoll[count] = 6)
				{
					let numInts = numInts + 1;
				}
				let count = count + 1;
			}	
				
			let total = 6 * numInts;
		}
		if(score = 7)
		{
			let total = diceRoll[0] + diceRoll[1] + diceRoll[2] + diceRoll[3] + diceRoll[4];
		}
		if(score = 8)
		{
			let total = diceRoll[0] + diceRoll[1] + diceRoll[2] + diceRoll[3] + diceRoll[4];
		}
		if(score = 9)
		{
			let total = 25;
		}
		if(score = 10)
		{
			let total = 30;
		}
		if(score = 11)
		{
			let total = 40;
		}
		if(score = 12)
		{
			let total = 50;
		}
		if(score = 13)
		{
			let total = diceRoll[0] + diceRoll[1] + diceRoll[2] + diceRoll[3] + diceRoll[4];
		}
		let scoreBoard[score] = total;
		
		return;
	}
	
	/*function void totalScores()
	{
		let p1Score[6] = p1Score[0] + p1Score[1] + p1Score[2] + p1Score[3] + p1Score[4] + p1Score[5];
		let p1Score[15] = p1Score[;
		let p1Score[16] = 0;
		
		let p2Score[6] = p2Score[0] + p2Score[1] + p2Score[2] + p2Score[3] + p2Score[4] + p2Score[5];
		let p2Score[15] = 0;
		let p2Score[16] = 0;
	}*/
}
