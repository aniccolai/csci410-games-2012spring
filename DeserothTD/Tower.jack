//This is a class associated for one type of tower.

class Tower {
	field int x;
	field int y;
	field int attack;
	field int level;
	field int upgradeCost;
	field int kills;
	field Creep target;
	
	constructor Tower new(int X, itn Y)
	{
		let x = X;
		let y = Y;
		let attack = 2;
		let level = 1;
		let upgradeCost = 10;
		let kills = 0;
		//let target = null;
		return this;
	}
	
	method int getAttack()
	{
		return attack;
	}
	
	method int getLevel()
	{
		return level;
	}
	
	method int getKills()
	{
		return kills;
	}
	
	method int getCost()
	{
		return upgradeCost;
	}
	
	method int getX()
	{
		return x;
	}
	
	method int getY()
	{
		return y;
	}
		
	method void setTarget(Creep creep)
	{
		let target = creep;
		return;
	}
	
	method void dispose()
	{
		do Memory.deAlloc(this);
		return;
	}
	
	method void draw()
	{
		do Screen.setColor(true);
		do Screen.drawRectangle(x,y, x+32, y+32);
		do Screen.setColor(false);
		do Screen.drawRectangle(x+2, y+2, x+30, y+30);
		do Screen.setColor(true);
		do Screen.drawCircle(x+16, y+16,8);
		do Screen.setColor(false);
		do Screen.drawCircle(x+16, y+16,6);
		do Screen.setColor(true);
		do Screen.drawCircle(x+16, y+16,4);
		return;
	}
	
	//returns a boolean showing whether it killed a creep or not.
	method boolean shootTarget()
	{
		if (target.getAlive())
		{
			do target.takeDamage(attack);
			if (~(target.getAlive()))
			{
				let kills = kills + 1;
				return true;
			}
			do Screen.setColor(true);
			do Screen.drawLine(x+16,y+16, target.getX()+10, target.getY()+10);
		}
		return false;
	}
	
	method void upgradeTower()
	{
		let attack = attack*2;
		let upgradeCost = upgradeCost*2+10;
		let level = level + 1;
		return;
	}
}