class Level {
	field Array level;
	constructor Level new(String data) {
		var int i;
		var int j;
		var Array row;
		let level = Array.new(32);
		let i = 0;
		while(i<32) {
			let row=Array.new(16);
			let j = 0;
			while(j<16) {
				if(data.charAt(i*16+j)=42) {
					let row[j]=true;
				}
				else {
					let row[j]=false;
				}
				let j = j+1;
			}
			let level[i] = row;
			let i = i+1;
		}
		return this;
	}
	method void draw() {
		var int i;
		var int j;
		var Array row;

		do Screen.clearScreen();

		let i = 0;
		while(i<32) {
			let row=level[i];
			let j = 0;
			while(j<16) {
				if(row[j]) {
					do Screen.drawRectangle(i*16, j*16, i*16+15, j*16+15);
				}
				let j = j+1;
			}
			let level[i] = row;
			let i = i+1;
		}
		do Screen.drawLine(496,240,496,255);
		do Screen.drawLine(496,240,511,240);
		do Screen.drawLine(496,255,511,255);
		do Screen.drawLine(511,240,511,255);
		do Screen.drawRectangle(499,247,500,248);
		return;
	}
	method void clearMGunAt(int x, int y) {
		var int maxX;
		var in minY, maxY;
		var int i, j;
		var Array row;
		let i = Math.max((x-15)/16, 0);
		let maxX = Math.min((x+15)/16, 31);
		let minY = (y-1)/16;
		let maxY = Math.min(minY+1,15);
		do Screen.setColor(false);
		while(i<(maxX+1)) {
			let row = level[i];
			let j = minY;
			while(j<(maxY+1)) {
				if(~(row[j])) {
					do Screen.drawRectangle(i*16, j*16, (i*16)+15, (j*16)+15);
				}
				let j = j+1;
			}
			let i = i+1;
		}
		return;
	}
	method bool isBlockAt(int x, int y) {
		var Array row;
		if(x<0) {
			return true;
		}
		if(x>511) {
			return true;
		}
		if(y<0) {
			return true;
		}
		if(y>255) {
			return true;
		}
		let row = level[x/16];
		return row[y/16];
	}
}
