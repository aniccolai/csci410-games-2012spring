function Level.new 3
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 32
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 32
lt
not
if-goto WHILE_END0
push constant 16
call Array.new 1
pop local 2
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 16
lt
not
if-goto WHILE_END1
push argument 0
push local 0
push constant 16
call Math.multiply 2
push local 1
add
call String.charAt 2
push constant 42
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 2
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 1
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push this 0
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Level.draw 3
push argument 0
pop pointer 0
call Screen.clearScreen 0
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 32
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 2
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 16
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
pop pointer 1
push that 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 16
call Math.multiply 2
push local 1
push constant 16
call Math.multiply 2
push local 0
push constant 16
call Math.multiply 2
push constant 15
add
push local 1
push constant 16
call Math.multiply 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push this 0
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 496
push constant 240
push constant 496
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 496
push constant 240
push constant 511
push constant 240
call Screen.drawLine 4
pop temp 0
push constant 496
push constant 255
push constant 511
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 511
push constant 240
push constant 511
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 499
push constant 247
push constant 500
push constant 248
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Level.clearMGunAt 6
push argument 0
pop pointer 0
push argument 1
push constant 15
sub
push constant 16
call Math.divide 2
push constant 0
call Math.max 2
pop local 3
push argument 1
push constant 15
add
push constant 16
call Math.divide 2
push constant 31
call Math.min 2
pop local 0
push argument 2
push constant 1
sub
push constant 16
call Math.divide 2
pop local 1
push local 1
push constant 1
add
push constant 15
call Math.min 2
pop local 2
push constant 0
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 3
push local 0
push constant 1
add
lt
not
if-goto WHILE_END0
push local 3
push this 0
add
pop pointer 1
push that 0
pop local 5
push local 1
pop local 4
label WHILE_EXP1
push local 4
push local 2
push constant 1
add
lt
not
if-goto WHILE_END1
push local 4
push local 5
add
pop pointer 1
push that 0
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push constant 16
call Math.multiply 2
push local 4
push constant 16
call Math.multiply 2
push local 3
push constant 16
call Math.multiply 2
push constant 15
add
push local 4
push constant 16
call Math.multiply 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Level.isBlockAt 1
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push argument 1
push constant 511
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push argument 2
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
return
label IF_FALSE2
push argument 2
push constant 255
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
return
label IF_FALSE3
push argument 1
push constant 16
call Math.divide 2
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push constant 16
call Math.divide 2
push local 0
add
pop pointer 1
push that 0
return
