function Cursor.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push constant 5
pop this 4
push constant 0
pop this 2
push argument 0
pop this 3
push pointer 0
return
function Cursor.isValid 0
push argument 0
pop pointer 0
push this 2
return
function Cursor.moveLeft 1
push argument 0
pop pointer 0
push this 4
push constant 2
call Math.divide 2
pop local 0
push constant 2
push local 0
call Math.multiply 2
pop this 4
push constant 0
return
function Cursor.moveRight 1
push argument 0
pop pointer 0
push this 4
push constant 2
call Math.divide 2
pop local 0
push constant 2
push local 0
call Math.multiply 2
push constant 1
add
pop this 4
push constant 0
return
function Cursor.moveUp 0
push argument 0
pop pointer 0
push this 4
push constant 8
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
push constant 2
add
pop this 4
label IF_FALSE0
push constant 0
return
function Cursor.moveDown 0
push argument 0
pop pointer 0
push this 4
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
push constant 2
sub
pop this 4
label IF_FALSE0
push constant 0
return
function Cursor.updatePos 2
push argument 0
pop pointer 0
push pointer 0
call Cursor.clearDraw 1
pop temp 0
call Chambers.getRoom 0
pop local 0
push this 3
call Player.getX 1
pop this 0
push this 3
call Player.getY 1
pop this 1
push this 1
push constant 32
call Math.multiply 2
push this 0
add
pop local 1
push this 4
push constant 7
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label WHILE_EXP0
push this 1
push constant 0
gt
not
if-goto WHILE_END0
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop this 2
goto IF_END2
label IF_FALSE2
push constant 0
pop this 2
label IF_END2
push constant 0
return
label IF_FALSE1
push this 1
push constant 1
sub
pop this 1
push local 1
push constant 32
sub
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop this 2
goto IF_END3
label IF_FALSE3
push constant 0
pop this 2
label IF_END3
push constant 0
return
label IF_FALSE0
push this 4
push constant 2
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
label WHILE_EXP1
push this 1
push constant 15
lt
not
if-goto WHILE_END1
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
pop this 2
goto IF_END6
label IF_FALSE6
push constant 0
pop this 2
label IF_END6
push constant 0
return
label IF_FALSE5
push this 1
push constant 1
add
pop this 1
push local 1
push constant 32
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
pop this 2
goto IF_END7
label IF_FALSE7
push constant 0
pop this 2
label IF_END7
push constant 0
return
label IF_FALSE4
push this 4
push constant 2
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
label WHILE_EXP2
push this 0
push constant 0
gt
push this 1
and
push constant 15
lt
not
if-goto WHILE_END2
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 0
gt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 0
not
pop this 2
goto IF_END10
label IF_FALSE10
push constant 0
pop this 2
label IF_END10
push constant 0
return
label IF_FALSE9
push this 0
push constant 1
sub
pop this 0
push this 1
push constant 1
add
pop this 1
push local 1
push constant 31
add
pop local 1
goto WHILE_EXP2
label WHILE_END2
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 0
not
pop this 2
goto IF_END11
label IF_FALSE11
push constant 0
pop this 2
label IF_END11
push constant 0
return
label IF_FALSE8
push this 4
push constant 3
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
label WHILE_EXP3
push this 0
push constant 31
lt
push this 1
and
push constant 15
lt
not
if-goto WHILE_END3
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 0
gt
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push constant 0
not
pop this 2
goto IF_END14
label IF_FALSE14
push constant 0
pop this 2
label IF_END14
push constant 0
return
label IF_FALSE13
push this 0
push constant 1
add
pop this 0
push this 1
push constant 1
add
pop this 1
push local 1
push constant 33
add
pop local 1
goto WHILE_EXP3
label WHILE_END3
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 0
not
pop this 2
goto IF_END15
label IF_FALSE15
push constant 0
pop this 2
label IF_END15
push constant 0
return
label IF_FALSE12
push this 4
push constant 4
eq
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
label WHILE_EXP4
push this 0
push constant 0
gt
not
if-goto WHILE_END4
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 0
gt
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
push constant 0
not
pop this 2
goto IF_END18
label IF_FALSE18
push constant 0
pop this 2
label IF_END18
push constant 0
return
label IF_FALSE17
push this 0
push constant 1
sub
pop this 0
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP4
label WHILE_END4
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE19
goto IF_FALSE19
label IF_TRUE19
push constant 0
not
pop this 2
goto IF_END19
label IF_FALSE19
push constant 0
pop this 2
label IF_END19
push constant 0
return
label IF_FALSE16
push this 4
push constant 5
eq
if-goto IF_TRUE20
goto IF_FALSE20
label IF_TRUE20
label WHILE_EXP5
push this 0
push constant 31
lt
not
if-goto WHILE_END5
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 0
gt
if-goto IF_TRUE21
goto IF_FALSE21
label IF_TRUE21
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE22
goto IF_FALSE22
label IF_TRUE22
push constant 0
not
pop this 2
goto IF_END22
label IF_FALSE22
push constant 0
pop this 2
label IF_END22
push constant 0
return
label IF_FALSE21
push this 0
push constant 1
add
pop this 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP5
label WHILE_END5
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE23
goto IF_FALSE23
label IF_TRUE23
push constant 0
not
pop this 2
goto IF_END23
label IF_FALSE23
push constant 0
pop this 2
label IF_END23
push constant 0
return
label IF_FALSE20
push this 4
push constant 6
eq
if-goto IF_TRUE24
goto IF_FALSE24
label IF_TRUE24
label WHILE_EXP6
push this 0
push constant 0
gt
push this 1
and
push constant 0
gt
not
if-goto WHILE_END6
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 0
gt
if-goto IF_TRUE25
goto IF_FALSE25
label IF_TRUE25
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE26
goto IF_FALSE26
label IF_TRUE26
push constant 0
not
pop this 2
goto IF_END26
label IF_FALSE26
push constant 0
pop this 2
label IF_END26
push constant 0
return
label IF_FALSE25
push this 0
push constant 1
sub
pop this 0
push this 1
push constant 1
sub
pop this 1
push local 1
push constant 33
sub
pop local 1
goto WHILE_EXP6
label WHILE_END6
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE27
goto IF_FALSE27
label IF_TRUE27
push constant 0
not
pop this 2
goto IF_END27
label IF_FALSE27
push constant 0
pop this 2
label IF_END27
push constant 0
return
label IF_FALSE24
push this 4
push constant 7
eq
if-goto IF_TRUE28
goto IF_FALSE28
label IF_TRUE28
label WHILE_EXP7
push this 0
push constant 31
lt
push this 1
and
push constant 0
gt
not
if-goto WHILE_END7
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 0
gt
if-goto IF_TRUE29
goto IF_FALSE29
label IF_TRUE29
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE30
goto IF_FALSE30
label IF_TRUE30
push constant 0
not
pop this 2
goto IF_END30
label IF_FALSE30
push constant 0
pop this 2
label IF_END30
push constant 0
return
label IF_FALSE29
push this 0
push constant 1
add
pop this 0
push this 1
push constant 1
sub
pop this 1
push local 1
push constant 31
sub
pop local 1
goto WHILE_EXP7
label WHILE_END7
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE31
goto IF_FALSE31
label IF_TRUE31
push constant 0
not
pop this 2
goto IF_END31
label IF_FALSE31
push constant 0
pop this 2
label IF_END31
push constant 0
return
label IF_FALSE28
push constant 0
return
function Cursor.draw 0
push argument 0
pop pointer 0
push this 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push this 1
call Tilesets.drawCursorValid 2
pop temp 0
goto IF_END0
label IF_FALSE0
push this 0
push this 1
call Tilesets.drawInvalidCursor 2
pop temp 0
label IF_END0
push constant 0
return
function Cursor.clearDraw 1
push argument 0
pop pointer 0
push this 0
push constant 512
push this 1
call Math.multiply 2
add
pop local 0
push local 0
push this 0
push constant 32
push this 1
call Math.multiply 2
add
call Tilesets.drawChamberBlock 2
pop temp 0
push constant 0
return
function Cursor.getX 0
push argument 0
pop pointer 0
push this 0
return
function Cursor.getY 0
push argument 0
pop pointer 0
push this 1
return
