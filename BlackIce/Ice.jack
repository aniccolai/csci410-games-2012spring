class Ice {
	
	field int x, y;
	
    constructor Ice new(int Ax, int Ay) {
        let x = Ax * 16;
        let y = Ay * 16;
        return this;
    }

    method void set(int Ay, int Ax){
        let x = Ax * 16;
        let y = Ay * 16;
        return;
    }

    /** Draws the guy on the screen */
    method void draw() {
        var int sstart, sX, sY, i, j;
        let sstart =  16384;
        let sY = y;
        let sX = x/16;
        let i = sstart + sX + (sY*32);
        do Memory.poke(i,1160);
        do Memory.poke(i + 32,2320);
        do Memory.poke(i + 64,4640);
        do Memory.poke(i + 96,9280);

        do Memory.poke(i + 128,18560);
        do Memory.poke(i + 160,-28416);
        do Memory.poke(i + 192,8705);
        do Memory.poke(i + 224,17410);

        do Memory.poke(i + 256,-30716);
        do Memory.poke(i + 288,4105);
        do Memory.poke(i + 320,8210);
        do Memory.poke(i + 352,16420);

        do Memory.poke(i + 384,-32696);
        do Memory.poke(i + 416,145);
        do Memory.poke(i + 448,290);
        do Memory.poke(i + 480,580);
        return;
    }
}
/* Ice bit map
0000 0100 1000 1000     1160
0000 1001 0001 0000     2320
0001 0010 0010 0000     4640
0010 0100 0100 0000     9280

0100 1000 1000 0000     18560
1001 0001 0000 0000     -28416
0010 0010 0000 0001     8705
0100 0100 0000 0010     17410

1000 1000 0000 0100     -30716
0001 0000 0000 1001     4105
0010 0000 0001 0010     8210
0100 0000 0010 0100     16420

1000 0000 0100 1000     -32696
0000 0000 1001 0001     145
0000 0001 0010 0010     290
0000 0010 0100 0100     580

1001 0001 0000 0000
0110 1110 1111 1111
0110 1111 0000 0000     -28416

1000 1000 0000 0100
0111 0111 1111 1011
0111 0111 1111 1100     -30716

1000 0000 0100 1000
0111 1111 1011 0111
0111 1111 1011 1000     -32696
*/