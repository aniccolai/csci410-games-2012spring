function Board.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 512
call Array.new 1
pop this 0
push pointer 0
call Board.initalize 1
pop temp 0
push pointer 0
return
function Board.set 1
push argument 0
pop pointer 0
push argument 1
push constant 32
call Math.multiply 2
push argument 2
add
pop local 0
push local 0
push this 0
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.clearBoard 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 1
push constant 32
lt
not
if-goto WHILE_END1
push pointer 0
push local 0
push local 1
push constant 0
call Board.set 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.initalize 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 1
push constant 32
lt
not
if-goto WHILE_END1
push local 1
push constant 1
eq
push local 1
push constant 30
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
push local 1
push constant 3
call Board.set 4
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
push local 0
push local 1
push constant 2
call Board.set 4
pop temp 0
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push constant 16
lt
not
if-goto WHILE_END2
push pointer 0
push local 0
push constant 0
push constant 1
call Board.set 4
pop temp 0
push pointer 0
push local 0
push constant 31
push constant 1
call Board.set 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push constant 1
pop local 1
label WHILE_EXP3
push local 1
push constant 31
lt
not
if-goto WHILE_END3
push pointer 0
push constant 0
push local 1
push constant 1
call Board.set 4
pop temp 0
push pointer 0
push constant 15
push local 1
push constant 1
call Board.set 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP3
label WHILE_END3
push pointer 0
push constant 2
push constant 30
push constant 5
call Board.set 4
pop temp 0
push pointer 0
push constant 1
push constant 1
push constant 6
call Board.set 4
pop temp 0
push pointer 0
push constant 3
push constant 17
push constant 4
call Board.set 4
pop temp 0
push pointer 0
push constant 5
push constant 24
push constant 4
call Board.set 4
pop temp 0
push pointer 0
push constant 7
push constant 9
push constant 4
call Board.set 4
pop temp 0
push pointer 0
push constant 9
push constant 15
push constant 4
call Board.set 4
pop temp 0
push pointer 0
push constant 11
push constant 11
push constant 4
call Board.set 4
pop temp 0
push pointer 0
push constant 13
push constant 18
push constant 4
call Board.set 4
pop temp 0
push pointer 0
push constant 1
push constant 21
push constant 1
call Board.set 4
pop temp 0
push pointer 0
push constant 2
push constant 11
push constant 1
call Board.set 4
pop temp 0
push pointer 0
push constant 4
push constant 19
push constant 1
call Board.set 4
pop temp 0
push pointer 0
push constant 5
push constant 12
push constant 1
call Board.set 4
pop temp 0
push pointer 0
push constant 6
push constant 20
push constant 1
call Board.set 4
pop temp 0
push pointer 0
push constant 8
push constant 15
push constant 1
call Board.set 4
pop temp 0
push pointer 0
push constant 10
push constant 5
push constant 1
call Board.set 4
pop temp 0
push pointer 0
push constant 12
push constant 13
push constant 1
call Board.set 4
pop temp 0
push pointer 0
push constant 14
push constant 20
push constant 1
call Board.set 4
pop temp 0
push constant 0
return
function Board.getSpot 2
push argument 0
pop pointer 0
push argument 2
push constant 32
call Math.multiply 2
push argument 1
add
pop local 0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
return
