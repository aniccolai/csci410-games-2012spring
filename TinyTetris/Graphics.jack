class Graphics {
	function void setupScreen() {
		do Screen.clearScreen();

		do Graphics.drawTitle();
		do Graphics.drawInstructions();
		do Graphics.drawBoard();
		do Graphics.drawScorePanel();

		return;
	}

	function void drawTitle() {
		var int i;

		do Graphics.drawTitleLetter(8 + (48 * 0), 8, 84);
		do Graphics.drawTitleLetter(8 + (48 * 1), 8, 73);
		do Graphics.drawTitleLetter(8 + (48 * 2), 8, 78);
		do Graphics.drawTitleLetter(8 + (48 * 3), 8, 89);

		do Graphics.drawTitleLetter(8 + (48 * 0), 72, 84);
		do Graphics.drawTitleLetter(8 + (48 * 1), 72, 69);
		do Graphics.drawTitleLetter(8 + (48 * 2), 72, 84);
		do Graphics.drawTitleLetter(8 + (48 * 3), 72, 82);
		do Graphics.drawTitleLetter(8 + (48 * 4), 72, 73);
		do Graphics.drawTitleLetter(8 + (48 * 5), 72, 83);

		return;
	}

	function void drawInstructions() {
		do Graphics.drawArrow(41, 176, 1);
		do Graphics.drawArrow(112, 180, 0);
		do Graphics.drawArrow(137, 180, 2);
		do Graphics.drawArrow(208, 179, 3);
		do Graphics.drawSpaceSymbol(17, 186);

		do Graphics.drawRotateSymbol(0, 216);
		do Graphics.drawMoveSymbol(6, 216);
		do Graphics.drawDownSymbol(11, 216);
		do Graphics.drawDropSymbol(17, 216);

		return;
	}

	function void drawBoard() {
		var int i;
		let i = 0;

		while (i < 28) {
			do Graphics.drawBrick(22, 88 + (6 * i), 1);
			do Graphics.drawBrick(28, 88 + (6 * i), 0);
			let i = i + 1;
		}

		let i = 0;
		while (i < 5) {
			do Graphics.drawBrick(23 + i, 250, 2);
			let i = i + 1;
		}

		do Screen.drawLine(368, 248, 447, 248);
		do Screen.drawPixel(370, 249);
		do Screen.drawPixel(374, 249);
		do Screen.drawPixel(378, 249);
		do Screen.drawPixel(382, 249);
		do Screen.drawPixel(386, 249);
		do Screen.drawPixel(390, 249);
		do Screen.drawPixel(394, 249);
		do Screen.drawPixel(398, 249);
		do Screen.drawPixel(402, 249);
		do Screen.drawPixel(406, 249);
		do Screen.drawPixel(410, 249);
		do Screen.drawPixel(414, 249);
		do Screen.drawPixel(418, 249);
		do Screen.drawPixel(422, 249);
		do Screen.drawPixel(426, 249);
		do Screen.drawPixel(430, 249);
		do Screen.drawPixel(434, 249);
		do Screen.drawPixel(438, 249);
		do Screen.drawPixel(442, 249);
		do Screen.drawPixel(446, 249);
		do Screen.drawPixel(450, 249);

		return;
	}

	function void drawScorePanel() {
		do Graphics.drawLinesSymbol(29, 104);
		
		return;
	}

	function void printWaitingMessage() {
		do Output.moveCursor(3, 40);
		do Output.printString("Press any key to start");
		return;
	}

	function void clearWaitingMessage() {
		do Output.moveCursor(3, 40);
		do Output.printString("                      ");
		return;
	}

	function void drawPiece(int x, int y, int piece1, int piece2) {
		var int base_x, base_y, base_address;
		var int i, cLocation;

		let base_x = 23;
		let base_y = 88;

		let base_address = MemoryHelper.getAddressForLocation(x + base_x, base_y + (y * 8));

		if((piece1 = 0) & (piece2 = 0)) {
			let i = 0;
			while(i < 8) {
				let cLocation = (base_address + (32 * i));
				do Memory.poke(cLocation, 0);
				let i = i + 1;
			}
			return;
		}

		if(piece2 = 0) {
			let i = 0;
			while(i < 8) {
				let cLocation = (base_address + (32 * i));
				do Memory.poke(cLocation, Texture.getPieceData(piece1, i));
				let i = i + 1;
			}

			return;
		}

		if(piece1 = 0) {
			let i = 0;
			while(i < 8) {
				let cLocation = (base_address + (32 * i));
				do Memory.poke(cLocation, Texture.getPieceData(piece2, i) * 256);
				let i = i + 1;
			}

			return;
		}

		if(~(piece1 = 0) & ~(piece2 = 0)) {
			let i = 0;
			while(i < 8) {
				do Memory.poke(base_address + (32 * i), Texture.getPieceData(piece1, i) + (Texture.getPieceData(piece2, i) * 256));
				let i = i + 1;
			}
		}

		return;
	}

	function void drawBrick(int x, int y, int side) {
		var int address, value, i;
		let i = 0;

		while(i < 6) {

			let address = MemoryHelper.getAddressForLocation(x, y + i);
			let value = Texture.getBrickData(i);

			if(side = 0) {
				do Memory.poke(address, value);
			}
			if (side = 1) {
				do Memory.poke(address, value * 256);
			}
			if (side = 2) {
				do Memory.poke(address, value + (value * 256));
			}

			let i = i + 1;
		}

		return;
	}

	function void drawTitleLetter(int x, int y, int letter) {
		do Graphics.drawTitleLetterBox(x, y);

		do Screen.setColor(false);

		if(letter = 84) {
			do Screen.drawRectangle(x + 7, y + 14, x + 27, y + 20);
			do Screen.drawRectangle(x + 14, y + 21, x + 20, y + 48);
		}

		if(letter = 73) {
			do Screen.drawRectangle(x + 7, y + 14, x + 27, y + 20);
			do Screen.drawRectangle(x + 14, y + 21, x + 20, y + 41);
			do Screen.drawRectangle(x + 7, y + 42, x + 27, y + 48);
		}

		if(letter = 78) {
			do Screen.drawRectangle(x + 7, y + 14, x + 27, y + 20);
			do Screen.drawRectangle(x + 7, y + 21, x + 13, y + 48);
			do Screen.drawRectangle(x + 21, y + 21, x + 27, y + 48);
		}

		if(letter = 89) {
			do Screen.drawRectangle(x + 7, y + 14, x + 13, y + 34);
			do Screen.drawRectangle(x + 14, y + 28, x + 20, y + 48);
			do Screen.drawRectangle(x + 21, y + 14, x + 27, y + 34);
		}

		if(letter = 69) {
			do Screen.drawRectangle(x + 7, y + 14, x + 13, y + 48);
			do Screen.drawRectangle(x + 14, y + 14, x + 27, y + 20);
			do Screen.drawRectangle(x + 14, y + 28, x + 27, y + 34);
			do Screen.drawRectangle(x + 14, y + 42, x + 27, y + 48);
		}

		if(letter = 82) {
			do Screen.drawRectangle(x + 7, y + 14, x + 27, y + 20);
			do Screen.drawRectangle(x + 21, y + 21, x + 27, y + 27);
			do Screen.drawRectangle(x + 7, y + 21, x + 13, y + 48);
			do Screen.drawRectangle(x + 14, y + 28, x + 20, y + 34);
			do Screen.drawRectangle(x + 21, y + 35, x + 27, y + 48);
		}

		if(letter = 83) {
			do Screen.drawRectangle(x + 7, y + 14, x + 27, y + 20);
			do Screen.drawRectangle(x + 7, y + 21, x + 13, y + 27);
			do Screen.drawRectangle(x + 7, y + 28, x + 27, y + 34);
			do Screen.drawRectangle(x + 21, y + 35, x + 27, y + 41);
			do Screen.drawRectangle(x + 7, y + 42, x + 27, y + 48);
		}

		return;
	}

	// Given a direction (values 0-3) and an x and y coordinate, 
	// draw the arrow in the given direction.
	// 
	// Arrow directions:
	//   1
	// 0   2
	//   3
	function void drawArrow(int x, int y, int direction) {
		do Screen.setColor(true);

		if(direction = 0) {
			do Screen.drawRectangle(x + 0, y + 8, x + 1, y + 9);
			do Screen.drawRectangle(x + 2, y + 6, x + 3, y + 11);
			do Screen.drawRectangle(x + 4, y + 4, x + 5, y + 13);
			do Screen.drawRectangle(x + 6, y + 2, x + 7, y + 15);
			do Screen.drawRectangle(x + 8, y + 0, x + 9, y + 17);
			do Screen.drawRectangle(x + 10, y + 5, x + 19, y + 12);
		}

		if(direction = 1) {
			do Screen.drawRectangle(x + 8, y + 0, x + 9, y + 1);
			do Screen.drawRectangle(x + 6, y + 2, x + 11, y + 3);
			do Screen.drawRectangle(x + 4, y + 4, x + 13, y + 5);
			do Screen.drawRectangle(x + 2, y + 6, x + 15, y + 7);
			do Screen.drawRectangle(x + 0, y + 8, x + 17, y + 9);
			do Screen.drawRectangle(x + 5, y + 10, x + 12, y + 19);
		}

		if(direction = 2) {
			do Screen.drawRectangle(x + 0, y + 5, x + 9, y + 12);
			do Screen.drawRectangle(x + 10, y + 0, x + 11, y + 17);
			do Screen.drawRectangle(x + 12, y + 2, x + 13, y + 15);
			do Screen.drawRectangle(x + 14, y + 4, x + 15, y + 13);
			do Screen.drawRectangle(x + 16, y + 6, x + 17, y + 11);
			do Screen.drawRectangle(x + 18, y + 8, x + 19, y + 9);
		}

		if(direction = 3) {
			do Screen.drawRectangle(x + 5, y + 0, x + 12, y + 9);
			do Screen.drawRectangle(x + 0, y + 10, x + 17, y + 11);
			do Screen.drawRectangle(x + 2, y + 12, x + 15, y + 13);
			do Screen.drawRectangle(x + 4, y + 14, x + 13, y + 15);
			do Screen.drawRectangle(x + 6, y + 16, x + 11, y + 17);
			do Screen.drawRectangle(x + 8, y + 18, x + 9, y + 19);
		}


		return;
	}

	function void drawSpaceSymbol(int x, int y) {
		var int address, value;
		var int i, j;
		let i = 0;

		while(i < 7) {
			let j = 0;

			while(j < 4) {
				let address = MemoryHelper.getAddressForLocation(x + j, y + i);
				let value = Symbol.getSpaceSymbolData(i, j);
				do Memory.poke(address, value);
				let j = j + 1;
			}

			let i = i + 1;
		}

		return;
	}

	function void drawRotateSymbol(int x, int y) {
		var int address, value;
		var int i, j;
		let i = 0;

		while(i < 14) {
			let j = 0;

			while(j < 6) {
				let address = MemoryHelper.getAddressForLocation(x + j, y + i);
				let value = Symbol.getRotateSymbolData(i, j);
				do Memory.poke(address, value);
				let j = j + 1;
			}

			let i = i + 1;
		}

		return;
	}

	function void drawMoveSymbol(int x, int y) {
		var int address, value;
		var int i, j;
		let i = 0;

		while(i < 13) {
			let j = 0;

			while(j < 5) {
				let address = MemoryHelper.getAddressForLocation(x + j, y + i);
				let value = Symbol.getMoveSymbolData(i, j);
				do Memory.poke(address, value);
				let j = j + 1;
			}

			let i = i + 1;
		}

		return;
	}

	function void drawDownSymbol(int x, int y) {
		var int address, value;
		var int i, j;
		let i = 0;

		while(i < 13) {
			let j = 0;

			while(j < 5) {
				let address = MemoryHelper.getAddressForLocation(x + j, y + i);
				let value = Symbol.getDownSymbolData(i, j);
				do Memory.poke(address, value);
				let j = j + 1;
			}

			let i = i + 1;
		}

		return;
	}

	function void drawDropSymbol(int x, int y) {
		var int address, value;
		var int i, j;
		let i = 0;

		while(i < 13) {
			let j = 0;

			while(j < 4) {
				let address = MemoryHelper.getAddressForLocation(x + j, y + i);
				let value = Symbol.getDropSymbolData(i, j);
				do Memory.poke(address, value);
				let j = j + 1;
			}

			let i = i + 1;
		}

		return;
	}

	function void drawLinesSymbol(int x, int y) {
		var int address, value;
		var int i, j;
		let i = 0;

		while(i < 6) {
			let j = 0;

			while(j < 3) {
				let address = MemoryHelper.getAddressForLocation(x + j, y + i);
				let value = Symbol.getLinesSymbolData(i, j);
				do Memory.poke(address, value);
				let j = j + 1;
			}

			let i = i + 1;
		}

		return;
	}

	function void drawTitleLetterBox(int x, int y) {
		do Screen.setColor(true);
		do Screen.drawRectangle(x, y, x + 42, y + 56);
		do Screen.setColor(false);
		do Screen.drawRectangle(x, y, x + 7, y + 7);
		do Screen.drawRectangle(x + 35, y + 49, x + 42, y + 56);

		return;
	}
}