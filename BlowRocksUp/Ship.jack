class Ship {
  field int x1, y1, width1, height1, x2, y2, width2, height2;

  constructor Ship new() {
    let x1 = 241;
    let y1 = 235;
    let width1 = 20;
    let height1 = 20;

    let width2 = 6;
    let height2 = 10;
    let x2 = x1 + (width1 / 2) - 3;
    let y2 = y1 - height2;

    do Screen.drawRectangle(x1, y1, x1 + width1, y1 + height1);
    do Screen.drawRectangle(x2, y2, x2 + width2, y1);
    return this;
  }

  // TODO
  method Bullet shoot(Array bulletArray, int bulletCount, Bullet b) {
    let b = Bullet.new(x1,y1);
    let bulletArray[bulletCount] = b;
    let bulletCount = bulletCount + 1;
    return b;
  }

  method void moveLeft() {
    if (x1 > 1) {
      do Screen.setColor(false);
      do Screen.drawRectangle((x1 + width1), y1, x1 + width1, y1 + height1);
      do Screen.drawRectangle((x2 + width2), y2, x2 + width2, y2 + height2);
      let x1 = x1 - 1;
      let x2 = x2 - 1;
      do Screen.setColor(true);
      do Screen.drawRectangle(x1, y1, x1, y1 + height1);
      do Screen.drawRectangle(x2, y2, x2, y2 + height2);
    }
    return;
  }

  method void moveRight() {
    if ((x1 + width1) < 510) {
      do Screen.setColor(false);
      do Screen.drawRectangle(x1, y1, x1, y1 + height1);
      do Screen.drawRectangle(x2, y2, x2, y2 + height2);
      let x1 = x1 + 1;
      let x2 = x2 + 1;
      do Screen.setColor(true);
      do Screen.drawRectangle((x1 + width1), y1, x1 + width1, y1 + height1);
      do Screen.drawRectangle((x2 + width2), y2, x2 + width2, y2 + height2);
    }
    return;
  }
  
  method int getX1() {
    return x1;
  }
  
  method int getY1() {
    return y1;
  }

  method void destroy() {
    do Memory.deAlloc(this);
    return;
  }
  
}