class Bullet {
  field int x, y;
  field boolean stopMoving;

  constructor Bullet new(int ex, int why) {
    let x = ex;
    let y = why;
    let stopMoving = false;

    do Screen.drawLine(x, y, x, y + 5);
    return this;
  }

  // move the bullet up the screen by 5 pixels
  method void move() {
    let y = y - 10;
    return;
  }

  // method for updating the bullet
  method void update() {
    if(~(stopMoving)) {
      do move();
      do Screen.drawLine(x, y, x, y + 5);
      do Screen.setColor(false);
      do Screen.drawLine(x, y + 10, x, y + 15);
      do Screen.setColor(true);
    }
    return;
  }

  // getX and getY will be used in conjunction with Asteroid.isHit()
  method int getX() {
    return x;
  }

  method int getY() {
    return y;
  }

  method boolean passedBorder() {
    if(y < 20) {
      return true;
    } else {
      return false;
    }
  }

  method void destroy() {
    do Screen.setColor(false);
    do Screen.drawLine(x, y, x, y + 5);
    do Screen.setColor(true);
    let stopMoving = true;
    return;
  }

  method boolean isDestroyed() {
    return stopMoving;
  }

  // remove the bullet (when it has been hit, obviously)
  method void deAlloc() {
    do Memory.deAlloc(this);
    return;
  }
}