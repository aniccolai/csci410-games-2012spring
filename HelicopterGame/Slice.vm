function Slice.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 12
pop static 2
push constant 20
pop static 0
push constant 236
pop static 1
push static 2
push constant 14
call Math.multiply 2
pop static 3
push static 0
pop this 2
push static 1
pop this 3
push static 0
push argument 0
push static 2
call Math.multiply 2
add
pop this 0
push static 1
push argument 1
push static 2
call Math.multiply 2
sub
pop this 1
push pointer 0
return
function Slice.draw 0
push argument 0
pop pointer 0
push this 0
push this 2
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push this 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push this 2
push argument 1
push static 2
add
push constant 1
sub
push this 0
call Screen.drawRectangle 4
pop temp 0
goto IF_END1
label IF_FALSE1
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push this 0
push argument 1
push static 2
add
push constant 1
sub
push this 2
call Screen.drawRectangle 4
pop temp 0
label IF_END1
label IF_FALSE0
push this 1
push this 3
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
push this 1
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push this 1
push argument 1
push static 2
add
push constant 1
sub
push this 3
call Screen.drawRectangle 4
pop temp 0
goto IF_END3
label IF_FALSE3
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push this 3
push argument 1
push static 2
add
push constant 1
sub
push this 1
call Screen.drawRectangle 4
pop temp 0
label IF_END3
label IF_FALSE2
push constant 0
return
function Slice.update 0
push argument 0
pop pointer 0
push argument 1
call Slice.ceiling 1
pop this 2
push argument 1
call Slice.floor 1
pop this 3
push constant 0
return
function Slice.build_from 4
push argument 0
pop pointer 0
push constant 1
neg
push constant 2
call Random.between 2
push static 2
call Math.multiply 2
pop local 0
push constant 1
neg
push constant 2
call Random.between 2
push static 2
call Math.multiply 2
pop local 1
push argument 1
call Slice.ceiling 1
pop local 2
push argument 1
call Slice.floor 1
pop local 3
push local 2
push local 0
add
push static 0
push constant 1
sub
gt
push local 2
push local 0
add
push constant 1
add
push static 0
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push local 0
add
pop this 0
goto IF_END0
label IF_FALSE0
push local 2
pop this 0
label IF_END0
push this 0
push static 3
add
push constant 1
sub
push local 3
push local 1
add
lt
push local 3
push local 1
add
push constant 1
sub
push static 1
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 3
push local 1
add
pop this 1
goto IF_END1
label IF_FALSE1
push local 3
pop this 1
label IF_END1
push this 1
push this 0
sub
push static 3
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push static 1
pop this 1
push static 0
pop this 0
label IF_FALSE2
push constant 0
return
function Slice.in_slice 1
push argument 0
pop pointer 0
push argument 1
push this 0
gt
push argument 2
push this 1
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 0
goto IF_END0
label IF_FALSE0
push constant 0
pop local 0
label IF_END0
push local 0
return
function Slice.shrink 0
push argument 0
pop pointer 0
push static 3
push constant 1
add
push static 2
push constant 5
call Math.multiply 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 3
push static 2
sub
pop static 3
label IF_FALSE0
push constant 0
return
function Slice.ceiling 0
push argument 0
pop pointer 0
push this 0
return
function Slice.floor 0
push argument 0
pop pointer 0
push this 1
return
function Slice.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
